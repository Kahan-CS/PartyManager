// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartyManager.Data;

#nullable disable

namespace PartyManager.Migrations
{
    [DbContext(typeof(PartyDbContext))]
    [Migration("20250307224812_seeded")]
    partial class seeded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PartyManager.Entities.Invitation", b =>
                {
                    b.Property<int>("InvitationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvitationId"));

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvitationId");

                    b.HasIndex("PartyId");

                    b.ToTable("Invitations");

                    b.HasData(
                        new
                        {
                            InvitationId = 1,
                            GuestEmail = "pmadziak@conestogac.on.ca",
                            GuestName = "Bob Jones",
                            PartyId = 1,
                            Status = "InviteNotSent"
                        },
                        new
                        {
                            InvitationId = 2,
                            GuestEmail = "peter.madziak@gmail.com",
                            GuestName = "Sally Smith",
                            PartyId = 1,
                            Status = "InviteNotSent"
                        },
                        new
                        {
                            InvitationId = 3,
                            GuestEmail = "pmadziak@conestogac.on.ca",
                            GuestName = "Bob Jones",
                            PartyId = 2,
                            Status = "InviteNotSent"
                        },
                        new
                        {
                            InvitationId = 4,
                            GuestEmail = "peter.madziak@gmail.com",
                            GuestName = "Sally Smith",
                            PartyId = 2,
                            Status = "InviteNotSent"
                        },
                        new
                        {
                            InvitationId = 5,
                            GuestEmail = "pmadziak@conestogac.on.ca",
                            GuestName = "Bob Jones",
                            PartyId = 3,
                            Status = "InviteNotSent"
                        },
                        new
                        {
                            InvitationId = 6,
                            GuestEmail = "peter.madziak@gmail.com",
                            GuestName = "Sally Smith",
                            PartyId = 3,
                            Status = "InviteNotSent"
                        });
                });

            modelBuilder.Entity("PartyManager.Entities.Party", b =>
                {
                    b.Property<int>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartyId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyId");

                    b.ToTable("Parties");

                    b.HasData(
                        new
                        {
                            PartyId = 1,
                            Description = "New Year's Eve Blast!!",
                            EventDate = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Time Square, NY"
                        },
                        new
                        {
                            PartyId = 2,
                            Description = "Drinks at Moe's Bar",
                            EventDate = new DateTime(2025, 10, 30, 16, 43, 12, 0, DateTimeKind.Unspecified),
                            Location = "Moe's Bar, Springfield"
                        },
                        new
                        {
                            PartyId = 3,
                            Description = "Thanksgiving Gathering",
                            EventDate = new DateTime(2025, 10, 20, 16, 43, 12, 0, DateTimeKind.Unspecified),
                            Location = "Springfield"
                        });
                });

            modelBuilder.Entity("PartyManager.Entities.Invitation", b =>
                {
                    b.HasOne("PartyManager.Entities.Party", "Party")
                        .WithMany("Invitations")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("PartyManager.Entities.Party", b =>
                {
                    b.Navigation("Invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
